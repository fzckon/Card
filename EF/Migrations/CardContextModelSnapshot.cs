// <auto-generated />
using EF.Card;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EF.Card.Migrations
{
    [DbContext(typeof(CardContext))]
    partial class CardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Models.Bank", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BankAbbr");

                    b.Property<string>("BankName");

                    b.Property<string>("EnBankAbbr");

                    b.Property<string>("EnBankName");

                    b.Property<string>("Tel");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Model.Models.Bill", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BillAmount");

                    b.Property<int>("BillStatus");

                    b.Property<DateTime>("BillingDate");

                    b.Property<string>("CardId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Remark");

                    b.Property<decimal>("RepayAmount");

                    b.Property<DateTime>("RepayDate");

                    b.HasKey("Id");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Model.Models.CardInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BankId");

                    b.Property<int?>("BillingDay");

                    b.Property<decimal?>("CardAmount");

                    b.Property<int?>("CardCurrency");

                    b.Property<string>("CardCvv");

                    b.Property<string>("CardCvv2");

                    b.Property<int>("CardLevel");

                    b.Property<string>("CardName");

                    b.Property<string>("CardNo");

                    b.Property<int>("CardOrg");

                    b.Property<int>("CardStatus");

                    b.Property<decimal?>("CardTempAmount");

                    b.Property<int>("CardType");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("HandleDate");

                    b.Property<string>("OpenBankName");

                    b.Property<string>("Password");

                    b.Property<string>("QPassword");

                    b.Property<string>("Remark");

                    b.Property<int?>("RepayDay");

                    b.Property<string>("ReservedTel");

                    b.Property<DateTime>("ValidDate");

                    b.Property<string>("ValidThru");

                    b.HasKey("Id");

                    b.ToTable("CardInfos");
                });

            modelBuilder.Entity("Model.Models.CardShare", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardId");

                    b.Property<int>("CardShareStatus");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Remark");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("CardShares");
                });

            modelBuilder.Entity("Model.Models.Friend", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("FriendId");

                    b.Property<int>("FriendStatus");

                    b.Property<string>("Remark");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("Model.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("NickName");

                    b.Property<string>("Remark");

                    b.Property<int>("Sex");

                    b.Property<int>("Status");

                    b.Property<string>("Tel");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Model.Models.UserPwd", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("NickName");

                    b.Property<string>("Remark");

                    b.Property<int>("Sex");

                    b.Property<int>("Status");

                    b.Property<string>("Tel");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("UserPwds");
                });
#pragma warning restore 612, 618
        }
    }
}
